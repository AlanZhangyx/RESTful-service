<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
       
    <!-- 仅scan所有的@controller -->
    <context:component-scan base-package="com.ddup" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>
    
    <!-- ++++++++++++++++++++++++++++++++++++++ i18n start +++++++++++++++++++++++++++++++++++++++++ -->
    <!-- i18n 资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!-- 默认编码方式，spring默认是"ISO-8859-1"，不利于编写messages文件 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- basename i18n 资源文件前半部分文件名称 从classpath开始 -->
        <property name="basename" value="i18n.messages" />
        <!-- 如果 i18n 找不到对应的资源文件，采用默认的key 作为message输出 -->
        <property name="useCodeAsDefaultMessage" value="true" />
    </bean>
    
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <!-- 1. 映射处理器 -->
    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <!-- 拦截器 Interceptors -->
        <property name="interceptors">
            <list>
                <!-- i18n -->
                <!-- 国际化操作 拦截器 必需配置，可以和其它国际化方式通用 -->
                <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
            </list>
        </property>
    </bean>
    
    <!-- 2. 调用处理器 -->
    <bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!-- 2.1 处理JSON数据转换的 -->
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter" />
            </list>
        </property>
        <!-- 2.2 数据校验 -->
        <property name="webBindingInitializer">
            <!-- 后台数据校验 -->
            <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
                <property name="validator" ref="validator"/>
            </bean>
        </property>
    </bean>
    
    <!-- 2.1 Jackson 支持（实现自动转换封装返回参数到JSon，ajax常用） -->
    <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    
    <!-- HibernateValidator配置后台数据校验,校验描述文件是上面定义的messageSource文件 -->
    <bean id="validator"  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

</beans>
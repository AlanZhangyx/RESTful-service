<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.iwhere</groupId>
	<artifactId>istar</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>istar Maven Webapp</name>
	<url>http://maven.apache.org</url>
	
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++项目properties配置++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<properties>
		<!-- 定义项目war包名字 -->
        <war.warname>istar</war.warname>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- java version -->
        <java.version>1.7</java.version>
		<spring.version>4.2.2.RELEASE</spring.version>
        <!-- jackson-version -->
		<jackson.version>2.6.3</jackson.version>
	</properties>
	
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++依赖管理++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<dependencies>
    	<!-- 1 servlet jsp -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
    	
    	<!-- 2 junit test:测试时有效 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        
        <!-- 3 DB drive runtime:测试/运行时有效,编译时只需要JDK提供的interface就好 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.9</version>
            <scope>runtime</scope>
        </dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

        <!-- 4 spring compile:默认范围编译/测试/运行都有效 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
        
        <!-- 5 mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.3.0</version>
        </dependency>
        <!-- 添加Mybatis的与Spring整合的核心包 -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.2.3</version>
        </dependency>
        <!-- mybatis私人分页插件 -->
        <dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper</artifactId>
		    <version>4.0.0</version>
		</dependency>
        
        <!-- 6 Logging -->
	    <dependency>
	        <groupId>log4j</groupId>
	        <artifactId>log4j</artifactId>
	        <version>1.2.9</version>
	    </dependency>
	    
        <!-- 7 json-lib is convenient,but jackson is spring annotation用来解析返回json数据的 -->  
		<dependency>  
		    <groupId>net.sf.json-lib</groupId>  
		    <artifactId>json-lib</artifactId>  
		    <version>2.4</version>  
		    <classifier>jdk15</classifier>
		</dependency>
		<dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-core</artifactId>  
            <version>${jackson.version}</version>
        </dependency>
		<dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-databind</artifactId>  
            <version>${jackson.version}</version>
        </dependency>
		<dependency>  
            <groupId>com.fasterxml.jackson.core</groupId>  
            <artifactId>jackson-annotations</artifactId>  
            <version>${jackson.version}</version>
        </dependency>
        
		<!-- 8 JNative START
		<dependency>
			<groupId>local.JNative</groupId>
			<artifactId>JNative</artifactId>
			<version>1.0</version>
		</dependency> -->
        
        <!-- 9 file -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        
        <!-- 10 hibernate validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.2.Final</version>
		</dependency>

    </dependencies>
    
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++profiles+++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<!-- 默认激活开发环境 -->
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- 开发环境的数据库配置 -->
				<maven.database.driverClassName>com.mysql.jdbc.Driver</maven.database.driverClassName>
				<maven.database.url>jdbc:mysql://XXX:3306/XXX_dev?characterEncoding=UTF-8</maven.database.url>
				<maven.database.username></maven.database.username>
				<maven.database.password></maven.database.password>
				<!-- 日志级别 -->
				<maven.log.level>INFO</maven.log.level>
				<!-- JSON 输出格式，调试时使用text/html;charset=UTF-8方便浏览器查看 -->
                <maven.json.type>text/html;charset=UTF-8</maven.json.type>
			</properties>
		</profile>
		<profile>
			<!-- 使用时相关命令后加上 -Ppg -->
			<id>pg</id>
			<properties>
				<!-- 部署境的数据库配置 -->
				<maven.database.driverClassName>com.mysql.jdbc.Driver</maven.database.driverClassName>
				<maven.database.url>jdbc:mysql://XXX:3306/XXX_dev?characterEncoding=UTF-8</maven.database.url>
				<maven.database.username></maven.database.username>
				<maven.database.password></maven.database.password>
				<!-- 日志级别 -->
				<maven.log.level>ERROR</maven.log.level>
				<!-- War 包名称 -->
				<war.warname>${war.warname}</war.warname>
				<!-- 打包排除文件 -->
				<package.warSourceExcludes>WEB-INF/log/**</package.warSourceExcludes>
                <!-- JSON 输出格式，正式发布时使用application/json;charset=UTF-8 -->
                <maven.json.type>application/json; charset=UTF-8</maven.json.type>
			</properties>
		</profile>
	</profiles>
	
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++build++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <build>
        <finalName>${project.artifactId}</finalName>
        <!-- resources -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/java</directory>
				<filtering>true</filtering>
				<!-- 包含的文件!默认src/main/java 下只会编译java文件，会导致除java的其他如xml或者 properties文件可能某些情况不打包的情况发生 -->
				<includes>
					<!-- mybatis xml -->
					<include>**/*.xml</include>
					<!-- i18n 配置 -->
					<include>**/messages_*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<!-- 启动资源替换，用profile信息替换配置文件信息 -->
				<filtering>true</filtering>
                <!-- 排除文件 -->
                <excludes>
                    <!-- mybatis 自动构建代码用，只在开发阶段使用 -->
                    <exclude>mybatis-generator.xml</exclude>
                    <exclude>lib/mysql-connector-java-5.1.9.jar</exclude>
                </excludes>
			</resource>
		</resources>
		<!-- plugins -->
        <plugins>
        	<!-- maven整合tomcat7 -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<port>8080</port>
					<path>/${war.warname}</path>
					<uriEncoding>UTF-8</uriEncoding>
				</configuration>
			</plugin>
			
        	<!-- mybatis-generator 自动代码插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                	<!-- 配置文件 -->
                    <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>
            
            <!-- maven compile pulgin:maven的update project不会使用Eclipse指定的jdk compile version -->
            <!-- 有了这个插件指定的target版本，使用maven的update才能正确用指定的JDK版本 -->
            <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-compiler-plugin</artifactId>
			    <version>3.3</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>